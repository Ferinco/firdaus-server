datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Role {
  admin
  student
  teacher
}

model User {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  email           String   @unique
  firstName       String
  lastName        String
  middleName      String?
  class           String
  department      String?
  password        String
  oldPassword     String?
  reports         Report[]
  admissionNumber String?  @unique
  role            Role     @default(student)
}

model SchoolFee {
  id     String          @id @default(auto()) @map("_id") @db.ObjectId
  term   Int
  year   Int
  status SchoolFeeStatus @default(PENDING)
}

enum SchoolFeeStatus {
  PENDING
  UNPAID
  FAILED
  PAID
}

model Report {
  id        String       @id @default(auto()) @map("_id") @db.ObjectId
  teacherId User         @relation(fields: [studentId], references: [id])
  subjects  Subject[]
  status    ReportStatus @default(DRAFT)
  studentId String       @db.ObjectId
  term      Term
}

enum Term {
  FIRST_TERM
  SECOND_TERM
  LAST_TERM
}

enum ReportStatus {
  PUBLISHED
  DRAFT
}

//-----------------------------------------------------
// LIST OF ALL THE SUBJECTS FOR SENIOR SECONDARY SCHOOLS
//----------------------------------------------------
type Subject {
  subject                   String
  continuousAssessmentScore Int
  examScore                 Int
  totalWeightedAverage      Int
  positionGrade             Int
  comment                   String
}

enum SubjectType {
  Accounting
  Agriculture
  AnimalHusbandry
  Arabic
  Biology
  CateringCraftPractice
  Chemistry
  CivicEducation
  Commerce
  DataProcessing
  Economics
  EnglishLanguage
  FurtherMathematics
  Geography
  Government
  IRS
  LiteratureInEnglish
  Marketing
  Mathematics
  Physics
  YorubaLanguage
}
